package BLC;

public class Car {
	private String model;  
	private int year;  
	private double price;
	 
	public Car(String model,int year ,double price) {
	 this.model = model;
//  this.year = year;   
//	 this.price = price;  
	 
	 if(year<2010) {
		 System.err.println("year must be greater than 2010");
	 }
	 else {
		 this.year = year; 
	 }
	 if(price<0) {
		 System.err.println("Price must be positive integer");
	 }
	 else {
		 this.price = price;
	 }
	 
	 if(price<0 || year<2010) {
		 System.exit(0);
	 }
	 
	 
	}

	@Override
	public String toString() {
		return "Car [model=" + model + ", year=" + year + ", price=" + price + "]";
	}
	
	
}

===================================================================================================================
package ELC;
import BLC.Car;
import java.util.Scanner;
public class TestCar {
public static void main(String[] args) {
	Scanner sc = new Scanner(System.in);
	System.out.println("Enter Car Model : ");
	String carName = sc.nextLine();
	System.out.println("Enter Car Manufacturing year : ");
	int carYear = sc.nextInt();
	System.out.println("Enter Car Price : ");
	double carPrice = sc.nextDouble();
	Car car = new Car(carName,carYear,carPrice);
	System.out.println(car.toString());
	
}
}
===================================================================================================================
OUTPUT :
======
Enter Car Model : 
toyato
Enter Car Manufacturing year : 
2025
Enter Car Price : 
500000
Car [model=toyato, year=2025, price=500000.0]
===================================================================================================================
Enter Car Model : 
TOYATO
Enter Car Manufacturing year : 
2001
Enter Car Price : 
500000
year must be greater than 2010
===================================================================================================================
Enter Car Model : 
toyato
Enter Car Manufacturing year : 
2001
Enter Car Price : 
-1000000
year must be greater than 2010
Price must be positive integer
===================================================================================================================
package BLC;

public class Employee {
	private String firstName;   
	private String lastName; 
	private int employeeId; 
	private double salary;  
	private int NoOfProject; 
	
	public Employee(String firstName,String lastName,int employeeId,double salary,int NoOfProject) {
		this.firstName=firstName;
		this.lastName=lastName;
		this.employeeId=employeeId;
		this.salary=salary;
		this.NoOfProject=NoOfProject;
	}

	@Override
	public String toString() {
		return "Employee [firstName=" + firstName + ", lastName=" + lastName + ", employeeId=" + employeeId
				+ ", salary=" + salary + ", NoOfProject=" + NoOfProject + "]";
	}
	
	public void calculateSalary() {
		if(NoOfProject >5 && NoOfProject<10) {
			salary = NoOfProject+5000;
		}else if(NoOfProject>=10 && NoOfProject<20) {
			salary = salary+10000;
		}else if(NoOfProject<0){
			System.out.println("Number of projects cannot be negative");
			System.out.println("Salary remains "+salary);
			System.exit(0);
		}
		else if(NoOfProject<5 && NoOfProject>0){
			salary = salary+0;
			System.out.println("Salary remains "+salary);
			System.exit(0);
		}	
		 else {
			salary = salary+15000;
		}
		System.out.println(" updated salary: "+salary);
	}
}

===================================================================================================================
package ELC;
import BLC.Employee;
import java.util.Scanner;
public class TestEmployee {
public static void main(String[] args) {
	Scanner sc = new Scanner(System.in);
	System.out.println("firstName:");
	String fn = sc.nextLine();
	System.out.println("lastName:");
	String ln = sc.nextLine();
	System.out.println("employeeId:");
	int emID = sc.nextInt();
	System.out.println("salary:");
	double sal = sc.nextDouble();
	System.out.println("NoOfProject:");
	int nOp = sc.nextInt();

	Employee em = new Employee(fn,ln,emID,sal,nOp);
	System.out.println(em.toString());
	em.calculateSalary();
}
}

===================================================================================================================
===================================================================================================================
package BLC;

public class Book {
    // Private fields
    private String title;
    private String author;
    private double price;

    // Parameterized Constructor
    public Book(String title, String author, double price) {
        this.title = title;
        this.author = author;
        this.price = price;
    }

    // Method to apply discount
    public void applyDiscount(double discountPercentage) {
        if (discountPercentage < 0) {
            System.out.println("Error: Invalid discount percentage.");
        } else {
            double discountAmount = price * (discountPercentage / 100);
            price = price - discountAmount;
        }
    }

    // toString method to display book details
    @Override
    public String toString() {
        return "Title: " + title + "\nAuthor: " + author + "\nPrice: " + price;
    }

    // Getter for price (optional if needed)
    public double getPrice() {
        return price;
    }
}

===================================================================================================================
package ELC;

import java.util.Scanner;
import BLC.Book;

public class Test {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // --- Input details ---
        System.out.print("Enter book title: ");
        String title = sc.nextLine();

        System.out.print("Enter author name: ");
        String author = sc.nextLine();

        System.out.print("Enter book price: ");
        double price = sc.nextDouble();

        // Create Book object
        Book book = new Book(title, author, price);

        // --- Validate price ---
        if (price < 0) {
            System.out.println("Error : Book Price cannot be negative.");
        }

        // --- Input discount ---
        System.out.print("Enter discount percentage: ");
        double discount = sc.nextDouble();

        // Apply discount
        book.applyDiscount(discount);

        // --- Display Book details ---
        System.out.println(book);

        sc.close();
    }
}

===================================================================================================================
===================================================================================================================
import java.util.Scanner;

public class Student{
public static void main(String [] args){
Scanner sc = new Scanner(System.in);
System.out.println("enter student details");
System.out.println("enter student name");
String name = sc.nextLine();
System.out.println("enter student Attendance");
double sAtt = sc.nextDouble();
System.out.println("enter student Exam Marks");
double eMarks = sc.nextDouble();
System.out.println("enter student Lab Performance");
double  sLabPer = sc.nextDouble();
System.out.println("enter student Daily Task");
double  sDailyTask = sc.nextDouble();
StudentLogic st = new StudentLogic(name,sAtt,eMarks,sLabPer,sDailyTask);
st.overallPercentage();
st.grade();
st.eligible();
System.out.println(st.toString());

}
}

class StudentLogic{
private String studentName;
private double studentAttendence;
private double studentExamMarks;
private double studentLabPerformance;
private double studentDailyTask;

StudentLogic(String studentName,double studentAttendence,double studentExamMarks,double studentLabPerformance,double studentDailyTask){
this.studentName = studentName;
this.studentAttendence = studentAttendence ;
this.studentExamMarks = studentExamMarks;
this.studentLabPerformance = studentLabPerformance;
this.studentDailyTask = studentDailyTask;

}
public double overallPercentage(){
double per = (studentAttendence+studentExamMarks+studentLabPerformance+studentDailyTask)/4;
return per;
}
public String grade(){
if(overallPercentage() >= 90){
return "A+";
}
else if(overallPercentage() >=80 && overallPercentage() < 90){
return "A";
}
else if(overallPercentage() >=70 && overallPercentage() < 80){
return "B";
}
else if(overallPercentage() >=60 && overallPercentage() < 70){
return "C";
}
else{
return "fail";
}
}
public String eligible(){
if(overallPercentage() >= 60){
return "Eligible";
}
else{
return "Not Eligible";
}
}
public String toString(){
return " Student Name: "+studentName+
 "\n Attendance: "+studentAttendence+
 "\n Exam Marks: "+studentExamMarks+
 "\n Lab Performance: "+studentLabPerformance+
 "\n Daily Task: "+studentDailyTask+
 "\n Overall Percentage: "+overallPercentage()+ 
 "\n Grade: "+grade()+ 
 "\n Promotion Eligibility: "+eligible();
}
}

//OUTPUT :
C:\Users\hp\OneDrive\Desktop\all codes\java\NotePadJavaCode>javac Student.java

C:\Users\hp\OneDrive\Desktop\all codes\java\NotePadJavaCode>java Student
enter student details
enter student name
tharun
enter student Attendance
85
enter student Exam Marks
75
enter student Lab Performance
85
enter student Daily Task
75
 Student Name: tharun
 Attendance: 85.0
 Exam Marks: 75.0
 Lab Performance: 85.0
 Daily Task: 75.0
 Overall Percentage: 80.0
 Grade: A
 Promotion Eligibility: Eligible
======================================================================================================================
===================================================================================================================
===================================================================================================================



